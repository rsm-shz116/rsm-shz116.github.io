library(haven)
library(dplyr)
library(ggplot2)
df <- read_dta("karlan_list_2007.dta")
df
df_info = df.info()
install.packages("summarytools")
library(summarytools)
# Summarize numerical columns
summary(df)
# View structure of the dataset
str(df)
# Check column names
names(df)
# Frequency of treatment groups
table(df$treatment, df$ratio)
# Summarize numerical columns
summary(df)
# View structure of the dataset
str(df)
# Frequency of treatment groups
table(df$treatment, df$ratio)
# Summarize numerical columns
summary(df)
# Frequency of treatment groups
table(df$treatment, df$ratio)
# Variables to summarize
vars <- c(
"mrm2", "hpa", "freq", "years", "dormant", "female", "couple",
"pwhite", "pblack", "page18_39", "ave_hh_sz", "red0", "redcty",
"nonlit", "cases"
)
# Function to compute mean and sd
summarize_stats <- function(df, var) {
m <- mean(df[[var]], na.rm = TRUE)
s <- sd(df[[var]], na.rm = TRUE)
n <- sum(!is.na(df[[var]]))
sprintf("%.3f (%.3f)", m, s)
}
# Prepare summary table
summary_table <- data.frame(
Variable = vars,
All = sapply(vars, function(v) summarize_stats(df, v)),
Treatment = sapply(vars, function(v) summarize_stats(df[df$treatment == 1, ], v)),
Control = sapply(vars, function(v) summarize_stats(df[df$treatment == 0, ], v))
)
# View summary
summary_table
# Store results
summary_results <- data.frame()
for (v in vars) {
df_clean <- df[!is.na(df[[v]]), ]
# Means, SDs, Ns
xA <- mean(df_clean[[v]][df_clean$treatment == 1])
xB <- mean(df_clean[[v]][df_clean$treatment == 0])
sA2 <- var(df_clean[[v]][df_clean$treatment == 1])
sB2 <- var(df_clean[[v]][df_clean$treatment == 0])
nA <- sum(df_clean$treatment == 1)
nB <- sum(df_clean$treatment == 0)
# Manual t-stat from class formula
t_manual <- (xA - xB) / sqrt(sA2/nA + sB2/nB)
# Linear regression
reg <- lm(as.formula(paste(v, "~ treatment")), data = df_clean)
reg_summary <- summary(reg)
coef_est <- reg_summary$coefficients["treatment", "Estimate"]
coef_se  <- reg_summary$coefficients["treatment", "Std. Error"]
reg_t    <- reg_summary$coefficients["treatment", "t value"]
reg_p    <- reg_summary$coefficients["treatment", "Pr(>|t|)"]
summary_results <- rbind(summary_results, data.frame(
Variable = v,
T_Manual = round(t_manual, 3),
Reg_t = round(reg_t, 3),
Reg_p = round(reg_p, 3)
))
}
# View comparison
summary_results
df %>%
mutate(group = ifelse(treatment == 1, "Treatment", "Control")) %>%
group_by(group) %>%
summarise(response_rate = mean(gave, na.rm = TRUE)) %>%
ggplot(aes(x = group, y = response_rate, fill = group)) +
geom_col(width = 0.6) +
labs(title = "Response Rate by Treatment Group",
x = "Group",
y = "Proportion Donated") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
theme_minimal() +
theme(legend.position = "none")
# Create summary stats by treatment
df %>%
mutate(group = ifelse(treatment == 1, "Treatment", "Control")) %>%
group_by(group) %>%
summarise(
response_rate = round(mean(gave), 3),
unconditional_donation = round(mean(amount), 3),
conditional_donation = round(mean(amount[gave == 1]), 3),
observations  = n()
)
# Manual t-test for difference in response rates
x_treat <- mean(df$gave[df$treatment == 1])
x_ctrl <- mean(df$gave[df$treatment == 0])
s2_treat <- var(df$gave[df$treatment == 1])
s2_ctrl <- var(df$gave[df$treatment == 0])
n_treat <- sum(df$treatment == 1)
n_ctrl <- sum(df$treatment == 0)
se_diff <- sqrt(s2_treat / n_treat + s2_ctrl / n_ctrl)
t_stat <- (x_treat - x_ctrl) / se_diff
se_diff
t_stat
model <- lm(gave ~ treatment, data = df)
summary(model)
library(haven)
library(dplyr)
library(ggplot2)
df <- read_dta("karlan_list_2007.dta")
df
# Summarize numerical columns
summary(df)
# Frequency of treatment groups
table(df$treatment, df$ratio)
# Variables to summarize
vars <- c(
"mrm2", "hpa", "freq", "years", "dormant", "female", "couple",
"pwhite", "pblack", "page18_39", "ave_hh_sz", "red0", "redcty",
"nonlit", "cases"
)
# Function to compute mean and sd
summarize_stats <- function(df, var) {
m <- mean(df[[var]], na.rm = TRUE)
s <- sd(df[[var]], na.rm = TRUE)
n <- sum(!is.na(df[[var]]))
sprintf("%.3f (%.3f)", m, s)
}
# Prepare summary table
summary_table <- data.frame(
Variable = vars,
All = sapply(vars, function(v) summarize_stats(df, v)),
Treatment = sapply(vars, function(v) summarize_stats(df[df$treatment == 1, ], v)),
Control = sapply(vars, function(v) summarize_stats(df[df$treatment == 0, ], v))
)
# View summary
summary_table
# Store results
summary_results <- data.frame()
for (v in vars) {
df_clean <- df[!is.na(df[[v]]), ]
# Means, SDs, Ns
xA <- mean(df_clean[[v]][df_clean$treatment == 1])
xB <- mean(df_clean[[v]][df_clean$treatment == 0])
sA2 <- var(df_clean[[v]][df_clean$treatment == 1])
sB2 <- var(df_clean[[v]][df_clean$treatment == 0])
nA <- sum(df_clean$treatment == 1)
nB <- sum(df_clean$treatment == 0)
# Manual t-stat from class formula
t_manual <- (xA - xB) / sqrt(sA2/nA + sB2/nB)
# Linear regression
reg <- lm(as.formula(paste(v, "~ treatment")), data = df_clean)
reg_summary <- summary(reg)
coef_est <- reg_summary$coefficients["treatment", "Estimate"]
coef_se  <- reg_summary$coefficients["treatment", "Std. Error"]
reg_t    <- reg_summary$coefficients["treatment", "t value"]
reg_p    <- reg_summary$coefficients["treatment", "Pr(>|t|)"]
summary_results <- rbind(summary_results, data.frame(
Variable = v,
T_Manual = round(t_manual, 3),
Reg_t = round(reg_t, 3),
Reg_p = round(reg_p, 3)
))
}
# View comparison
summary_results
df %>%
mutate(group = ifelse(treatment == 1, "Treatment", "Control")) %>%
group_by(group) %>%
summarise(response_rate = mean(gave, na.rm = TRUE)) %>%
ggplot(aes(x = group, y = response_rate, fill = group)) +
geom_col(width = 0.6) +
labs(title = "Response Rate by Treatment Group",
x = "Group",
y = "Proportion Donated") +
scale_y_continuous(labels = scales::percent_format(accuracy = 1)) +
theme_minimal() +
theme(legend.position = "none")
# Create summary stats by treatment
df %>%
mutate(group = ifelse(treatment == 1, "Treatment", "Control")) %>%
group_by(group) %>%
summarise(
response_rate = round(mean(gave), 3),
unconditional_donation = round(mean(amount), 3),
conditional_donation = round(mean(amount[gave == 1]), 3),
observations  = n()
)
# Manual t-test for difference in response rates
x_treat <- mean(df$gave[df$treatment == 1])
x_ctrl <- mean(df$gave[df$treatment == 0])
s2_treat <- var(df$gave[df$treatment == 1])
s2_ctrl <- var(df$gave[df$treatment == 0])
n_treat <- sum(df$treatment == 1)
n_ctrl <- sum(df$treatment == 0)
se_diff <- sqrt(s2_treat / n_treat + s2_ctrl / n_ctrl)
t_stat <- (x_treat - x_ctrl) / se_diff
se_diff
t_stat
model <- lm(gave ~ treatment, data = df)
summary(model)
library(margins)
# Probit regression: same as Table 3, Column 1
probit_model <- glm(gave ~ treatment, data = df, family = binomial(link = "probit"))
# Show regression output
summary(probit_model)
# Calculate marginal effect of treatment
mfx <- margins(probit_model)
summary(mfx)
# Filter for treatment groups only (exclude control)
df_treat <- df %>% filter(treatment == 1)
# Make sure ratio is a factor for grouping
df_treat <- df_treat %>% mutate(ratio = as.character(ratio))
# 1. Compare 2:1 vs. 1:1
gave_2_1 <- df_treat$gave[df_treat$ratio == "2"]
gave_1_1 <- df_treat$gave[df_treat$ratio == "1"]
t_2_vs_1 <- t.test(gave_2_1, gave_1_1, var.equal = TRUE)
print(t_2_vs_1)
# 2. Compare 3:1 vs. 1:1
gave_3_1 <- df_treat$gave[df_treat$ratio == "3"]
t_3_vs_1 <- t.test(gave_3_1, gave_1_1, var.equal = TRUE)
print(t_3_vs_1)
# 3. Compare 3:1 vs. 2:1
t_3_vs_2 <- t.test(gave_3_1, gave_2_1, var.equal = TRUE)
print(t_3_vs_2)
model_ratio <- lm(gave ~ ratio, data = df %>% filter(treatment == 1))
summary(model_ratio)
library(tidyr)
# Calculate raw response rates for each match ratio
df %>%
filter(ratio %in% c("1", "2", "3")) %>%
group_by(ratio) %>%
summarise(response_rate = mean(gave, na.rm = TRUE)) %>%
pivot_wider(names_from = ratio, values_from = response_rate) -> rate_table
# Calculate differences
diff_2_vs_1 <- rate_table$`2` - rate_table$`1`
diff_3_vs_2 <- rate_table$`3` - rate_table$`2`
cat("Response rate difference (2:1 vs 1:1):", round(diff_2_vs_1, 4), "\n")
cat("Response rate difference (3:1 vs 2:1):", round(diff_3_vs_2, 4), "\n")
coef_table <- summary(model_ratio)$coefficients
# Extract coefficients
coef_1_1 <- coef_table["(Intercept)", "Estimate"]
coef_2_1 <- coef_table["ratio2", "Estimate"]
model_ratio <- lm(gave ~ factor(ratio), data = df %>% filter(treatment == 1))
summary(model_ratio)
library(tidyr)
# Calculate raw response rates for each match ratio
df %>%
filter(ratio %in% c("1", "2", "3")) %>%
group_by(ratio) %>%
summarise(response_rate = mean(gave, na.rm = TRUE)) %>%
pivot_wider(names_from = ratio, values_from = response_rate) -> rate_table
# Calculate differences
diff_2_vs_1 <- rate_table$`2` - rate_table$`1`
diff_3_vs_2 <- rate_table$`3` - rate_table$`2`
cat("Response rate difference (2:1 vs 1:1):", round(diff_2_vs_1, 4), "\n")
cat("Response rate difference (3:1 vs 2:1):", round(diff_3_vs_2, 4), "\n")
coef_table <- summary(model_ratio)$coefficients
# Extract coefficients
coef_1_1 <- coef_table["(Intercept)", "Estimate"]
coef_2_1 <- coef_table["ratio2", "Estimate"]
coef_table <- summary(model_ratio)$coefficients
# Extract coefficients
coef_1_1 <- coef_table["(Intercept)", "Estimate"]
coef_2_1 <- coef_table["factor(ratio)2", "Estimate"]
coef_3_1 <- coef_table["factor(ratio)3", "Estimate"]
# Differences between fitted values
fitted_2_vs_1 <- coef_2_1
fitted_3_vs_2 <- coef_3_1 - coef_2_1
cat("Fitted response rate difference (2:1 vs 1:1):", round(fitted_2_vs_1, 4), "\n")
cat("Fitted response rate difference (3:1 vs 2:1):", round(fitted_3_vs_2, 4), "\n")
